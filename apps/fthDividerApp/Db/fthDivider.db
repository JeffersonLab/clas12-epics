#These records are for a whole board
#See fthDividerChan.db
#For those which are for single channels on the board.
# % macro, PORT, Asyn port name
# % macro, P   , prefix eg. B_FT_FLASHER
# % macro, NCHAN, highest channel ID number
# This one for debugging using asyns
# run something like this:
#
#medm -x -macro P=B_DET_FTH_DIVIDER,R=:asyn /home/epics/clas/clas12/R3.14.12.3/synApps_5_5/support/asyn-4-13/medm/asynRecord.adl
#
#In the GUI select the "more" menu : asynOctet Interface option
#This pops up a GUI where we can write and read strings directly to the device.
#  
#record(asyn,"$(P):asyn"){
#     field(DTYP,"asynRecordDevice")
#     field(PORT,"$(PORT)")
#}

#Now these are the records for the board (as opposed to the individual channels)
#Approximately in the order written in the wiki at:
#wiki.ge.infn.it/g3wiki/index.php/Monitoring_system
# 
#We select a channel for certain actions to refer to
#Forward links all to make sure all relevant records get processed.
# 
#Set the selected channel
record(ao, "$(P):SELECTED_CHANNEL"){
   field(LOPR,"0")
   field(HOPR,"$(NCHAN)")
   field(PINI,"YES")
   field(VAL,"0")

}

record(dfanout,"$(P):SELECTD_FANOUT"){
        field(DOL, "$(P):SELECTED_CHANNEL  CPP NMS")
        field(OMSL, "closed_loop")
        field(OUTA,"$(P):SELECTED_AMP.INDX CA")
        field(OUTB,"$(P):SELECTED_HV.INDX CA")
        #field(FLNK, "$(P):GET_AMP_ALL.PROC")
}

record(ao, "$(P):SET_SELECTED_AMP"){
   field(DTYP, "stream")
   field(LOPR,"0")
   field(HOPR,"4095")
   field(OUT,  "@fthDivider.proto setAmplSel($(P)) $(PORT)")
   field(FLNK, "$(P):GET_AMP_ALL.PROC")
}
 
 #Set the selected channel
record(ai, "$(P):GET_SELECTED_AMP"){
   field(DTYP, "stream")
   field(INP,  "@fthDivider.proto getAmplSel($(P)) $(PORT)")
   field(FLNK, "$(P):GET_AMP_ALL")    
}
 
record(waveform, "$(P):GET_AMP_ALL"){
         field(DTYP, "stream")
         field(DESC, "Width of All Channels")
         field(NELM, "$(NCHAN)")
         field(FTVL, "USHORT")
         field(PINI, "YES")
         field(SCAN, "10 second")
#      	 field(INP, "@fthDivider.proto getAmplArray($(NCHAN)) $(PORT)")
  	 field(INP, "@fthDivider.proto getAmplAll($(P)_ID,$(NCHAN)) $(PORT)")
}
 
#record(waveform, "$(P):GET_AMP_ALL"){
#  field(DTYP, "stream")
#  field(INP, "@fthDivider.proto getAmplAll($(P)_ID) $(PORT)")
#   field(SCAN, "10 second")
#}

#Set all amplitudes to same value
record(ao, "$(P):SET_AMP_ALL"){
   field(DTYP, "stream")
   field(LOPR,"0")
   field(HOPR,"4095")
   field(OUT,  "@fthDivider.proto setAmpAll $(PORT)")
   field(FLNK, "$(P):GET_SELECTED_AMP.PROC")
}
 

#Basic configuration commands
record(stringout, "$(P):SET_IP") {
   field(DTYP, "stream")
   field(OUT, "@fthDivider.proto setIP $(PORT)")
   field(FLNK, "$(P):GET_IP")
}
 
#Basic configuration commands
record(stringout, "$(P):COMMAND") {
   field(DTYP, "stream")
   field(OUT, "@fthDivider.proto sendCommand($(P)) $(PORT)")
}

record(stringin, "$(P):RESPONSE") {
}
  
#Basic configuration commands
record(stringout, "$(P):SET_IP") {
   field(DTYP, "stream")
   field(OUT, "@fthDivider.proto setIP $(PORT)")
   field(FLNK, "$(P):GET_IP")
}
 
record(stringin, "$(P):GET_IP") {
   field(DESC, "IP for $(P)")
   field(DTYP, "stream")
   field(PINI, "YES")
   field(INP, "@fthDivider.proto getIP $(PORT)")
}
 
record(stringout, "$(P):SET_MASK") {
   field(DTYP, "stream")
   field(OUT, "@fthDivider.proto setMask $(PORT)")
   field(FLNK, "$(P):GET_MASK")
 }

 
record(stringin, "$(P):GET_MASK") {
   field(DTYP, "stream")
   field(PINI, "YES")
   field(INP, "@fthDivider.proto getMask $(PORT)")
}

record(stringout, "$(P):SET_GATEWAY") {
   field(DTYP, "stream")
   field(OUT, "@fthDivider.proto setGateway $(PORT)")
   field(FLNK, "$(P):GET_GATEWAY")
}
 
record(stringin, "$(P):GET_GATEWAY") {
   field(DTYP, "stream")
   field(PINI, "YES")
   field(INP, "@fthDivider.proto getGateway $(PORT)")
}
 
record(stringout, "$(P):RESET") {
   field(DTYP, "stream")
   field(OUT, "@fthDivider.proto sendReset $(PORT)")
}
 
#set and get driver status ON or OFF

record(bo, "$(P):SET_DRIVER_STATUS") {
   field(DTYP, "stream")
   field(OUT, "@fthDivider.proto setDriverStatus $(PORT)")
   field(ZNAM, "OFF")
   field(ONAM, "ON")
   field(FLNK, "$(P):GET_DRIVER_STATUS")
}
 
record(bi, "$(P):GET_DRIVER_STATUS") {
   field(ZNAM, "OFF")
   field(ONAM, "ON")
   field(PINI, "YES")
   field(DTYP, "stream")
   field(INP, "@fthDivider.proto getDriverStatus $(PORT)")
}
 

#record(stringout, "$(P):SET_DATA_FILE") {
#   field(DTYP, "stream")
#   #field(OUT, "@fthDivider.proto setDataFile $(PORT)")
#   field(FLNK, "$(P):GET_DATA_FILE")
# }
# 
# record(stringin, "$(P):GET_DATA_FILE") {
#   #field(DTYP, "stream")
#   field(PINI, "YES")
#   #field(INP, "@fthDivider.proto getDataFile $(PORT)")
# }
# 
# 
# record(stringout, "$(P):LOAD_DATA") {
#   #field(DTYP, "stream")
#   #field(OUT, "@fthDivider.proto loadData $(PORT)")
# }
# 
# 
record(stringout, "$(P):SET_AMP_AS_SELECTED"){
   #field(DTYP, "stream")
   #field(OUT, "@fthDivider.proto setAllAmpAsSelected($(P)) $(PORT)")
   field(FLNK, "$(P):GET_SELECTED_AMP.PROC")    
}

record(waveform, "$(P):DATA_FILE_SAVE"){
         field(DESC, "File to save Amps")
         field(NELM, "256")
         field(FTVL, "CHAR")
}
record(waveform, "$(P):DATA_FILE_LOAD"){
         field(DESC, "File to load Width and Amps")
         field(NELM, "256")
         field(FTVL, "CHAR")
}
 
record(waveform, "$(P):SET_DATA"){
   field(DTYP, "stream")
   field(DESC, "All channel and width data")
   field(NELM, "61")
   field(FTVL, "USHORT")
   field(INP, "@fthDivider.proto setData $(PORT)")
#  field(FLNK,"$(P):SELECTED_CHANNEL")
}
# 
# 
# 
# 
#lookup tables to get x and y from LED index
record(waveform, "$(P):X_TABLE"){
         field(DESC, "LED x coord")
         field(NELM, "$(NCHAN)")
         field(FTVL, "SHORT")
}
 record(waveform, "$(P):Y_TABLE"){
         field(DESC, "LED y coord")
         field(NELM, "$(NCHAN)")
         field(FTVL, "SHORT")
#	field(SCAN, ".5 second")
}
record(waveform, "$(P):SIZE_TABLE"){
         field(DESC, "Tile size")
         field(NELM, "$(NCHAN)")
         field(FTVL, "SHORT")
#	field(SCAN, ".5 second")
 }
record(waveform, "$(P):LAYER_TABLE"){
         field(DESC, "Tile layer")
         field(NELM, "$(NCHAN)")
         field(FTVL, "SHORT")
#   	 field(SCAN, ".5 second")
}
record(waveform, "$(P):HV_TABLE"){
         field(DESC, "Tile layer")
         field(NELM, "$(NCHAN)")
         field(FTVL, "SHORT")
#   	 field(SCAN, ".5 second")
}
record(waveform, "$(P):SLOT_TABLE"){
         field(DESC, "Tile layer")
         field(NELM, "$(NCHAN)")
         field(FTVL, "SHORT")
#   	 field(SCAN, ".5 second")
}
record(waveform, "$(P):CHAN_TABLE"){
         field(DESC, "Tile layer")
         field(NELM, "$(NCHAN)")
         field(FTVL, "SHORT")
#   	 field(SCAN, ".5 second")
}

record(ai, "$(P):GET_TEMP"){
  field(DTYP, "stream")
  field(INP,  "@fthDivider.proto getTemps($(P):TEMP) $(PORT)")
  field(PINI, "YES")
  field(SCAN, "10 second")
}

record(ai, "$(P):TEMP00"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP01"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP02"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP03"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP04"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP05"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP06"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP07"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP08"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP09"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP10"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP11"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP12"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP13"){
    field(PINI, "YES")
}
record(ai, "$(P):TEMP14"){
    field(PINI, "YES")
}

#record(acalcout, "GETACHAN"){
#        field(NELM, "256")
#         field(INPA,"3")
#         field(INPB,"4")
#         field(INAA,"$(P):GET_AMP_ALL")
#         field(CALC,"DBL(AA[A,B])")
#}

record(subArray, "$(P):SELECTED_AMP"){
        field(INP, "$(P):GET_AMP_ALL")
        field(MALM, "$(NCHAN)")
        field(NELM, "1")
#       field(SCAN, ".5 second")
}
record(subArray, "$(P):SELECTED_HV"){
        field(INP, "$(P):HV_TABLE")
        field(MALM, "$(NCHAN)")
        field(NELM, "1")
	field(INDX,"0")
	field(PINI,"YES")
#       field(SCAN, ".5 second")
}
