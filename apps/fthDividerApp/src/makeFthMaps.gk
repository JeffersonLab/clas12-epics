#!/bin/awk
BEGIN{
FS=","
slot_offset=0;
divindex=0;
Prefix="B_DET_FTH_DIVIDER";
half["1"]="Top";
half["2"]="Bottom";
}
#run like this: awk -f makeFthMaps.gk FTHODO_coordinates_v1_geom2.csv FTHODO_coordinates_v1_ken_hvindex.csv
{
    if(FILENAME~"geom"){
	if(($1<=9)&&($1>=-11)){   #the geom2 first
	    y=$1;
	    #print $0
	    for(f=2;f<26;f++){
		if((length($f)>1)&&($f~"S")){
		    x=f-13
		    id=(y+11)*22+(x+11)
		    size=2
		    if((y==4)&&((x>=-4)&&(x<=3))) size=1
		    if((x==4)&&((y>=-4)&&(y<=3))) size=1
		    if((y==-5)||(x==-5)) size=1
		    
		    if((x==-9)&&((y==-7)||(y==6))) size=1
   		    if((x==-7)&&((y==-9)||(y==8))) size=1
		    if((x==-4)&&((y==-4)||(y==3))) size=1 
		    if((x==3)&&((y==-4)||(y==3))) size=1
		    if((x==6)&&((y==-9)||(y==8))) size=1
		    if((x==8)&&((y==-7)||(y==6))) size=1
		    
		    xcoord[$f]=x
		    ycoord[$f]=y
		    tsize[$f]=size
		    xcoord_id[id]=x
		    ycoord_id[id]=y
		    tsize_id[id]=size
		    name[id]=$f
		    #print name[id]
		}
	    }
	}
    }
    else{
	#save the Slot,Channel,Sector,Layer,Element,HVslot,HVChan indexed by name
        #          $1   $2      $3     $4     $5      $6     $7              $8
	#print $0
	#
	if($0 !~ "Slot"){
	    if($1<13) divindex=(16*($1-3))+$2
	    else      divindex=(16*($1-5))+$2
	    slot[divindex]=$1
	    chan[divindex]=$2
	    sector[divindex]=$3
	    layer[divindex]=$4
	    element[divindex]=$5
	    hvslot[divindex]=$6
	    hvchan[divindex]=$7
	    h[divindex]=($6 - 1)*12 + $7 + 1
	    bname=sprintf("%s_%s",$1,$4)
	    #boardi[$1,"_",$4]++;
	    #boardhv[$1,"_",$4]=($6 - 1)*12 + $7 + 1;
	    #boardch[$1,"_",$4]=sprintf("%s,%03d",boardch[$1,"_",$4],divindex);
	    boardi[bname]++;
	    boardhv[bname]=($6 - 1)*12 + $7 + 1;
	    boardch[bname]=sprintf("%s,%03d",boardch[bname],divindex);
	    #divindex++;
	}
    }
}
END{
    #now make arrays on the basis of going along rows from the bottom
    indx=0
    #get the ids of the counters sequntially inxeded starting zero
    for(y=-11;y<=9;y++){
	for(x=-11;x<=9;x++){
	    id=(y+11)*22+(x+11)
	    if(length(name[id])>0){
		ind[indx++]=id
		#print name[id]
	    }
	}
    }

    #for (x in boardc) print x, boardc[x];

    initfile="../op/scripts/initFthDivider.sh"
    subfile="../Db/fthDividerChan.substitutions"
    bsubfile="../Db/fthDividerBoard.substitutions"

    #put all this into the substitutions file so it can be available to the epics records if required.
    print "#Substitutions for fthDividerGroup" > bsubfile
    print "#" > bsubfile
    printf "file \"%s\" {\n","db/fthDividerGroup.db" > bsubfile
    print "    pattern {BOARD,\tHALF,\t\tHV,\tCHLIST\t}" > bsubfile

    PROCINFO["sorted_in"] = "@ind_num_asc"
    for(x in boardhv){ 
	split(x,a,"_");
	b=boardch[x];
	sub(",","",b)
	#print x, a[1],a[2], b > bsubfile;
	printf "            {\"%02d\",\t\"%s\",\t\"%02d\",\t\"%s\"\t}\n",a[1],half[a[2]],boardhv[x],b  > bsubfile;
    }
    print"}" > bsubfile

    print "#This file was autogenerated by makeFthMaps on:",strftime() > subfile
    print "#Substitutions for fthDividerChan" > subfile
    print "#" > subfile
    printf "file \"%s\" {\n","db/fthDividerChan.db" > subfile
    print "    pattern {I,\t\tX,\tY,\tSIZE,\tSLOT,\tCHAN,\tLAYER,\tSECTOR,\tELEM,\tHVCHAN\t}" > subfile

    #for(divindex in slot){
    dummy=990;
    for(divindex=0;divindex<240;divindex++){
	if(!(divindex in slot)){
	    ch=divindex%16
	    if(divindex<120) sl=int(divindex/16)+3
	    else             sl=int(divindex/16)+5
	    sector[divindex]=dummy;
	    element[divindex]=dummy;
	    enam=sprintf("S%sE%s",sector[divindex],element[divindex]);
	    xcoord[enam]=dummy
	    ycoord[enam]=dummy
	    tsize[enam]=dummy
	    slot[divindex]=sl
	    chan[divindex]=ch
	    layer[divindex]=1
	    sector[divindex]dummy
	    element[divindex]dummy;
	    if(divindex>=232)h[divindex]=30
	    else h[divindex]=15
	    dummy++
	}
	enam=sprintf("S%sE%s",sector[divindex],element[divindex]);
	printf "            {\"%03d\",\t\"%s\",\t\"%s\",\t\"%s\",\t\"%02d\",\t\"%02d\",\t\"%s\",\t\"%s\",\t\"%02d\",\t\"%02d\"\t}\n",divindex,  xcoord[enam], ycoord[enam], tsize[enam], slot[divindex], chan[divindex],   layer[divindex], sector[divindex],  element[divindex], h[divindex] > subfile;
    }
    print"}" > subfile

    #make some waveform arrays to be put in the init file

    printf "#!/bin/sh\n" > initfile
    print "#This file was autogenerated by makeFthMaps on:",strftime() > initfile
    printf "scriptdir=\"${EPICS_SCRIPTS}\"\n"  > initfile
    printf "Prefix=\"%s\"\n",Prefix  > initfile
    printf "\n\n" > initfile

    printf "##This lot for the TOP module\n"   > initfile
    printf "##Set the default init files (in user space)\n"     > initfile
#    printf "caput -S ${Prefix}:DATA_FILE_LOAD ${scriptdir}/fthDividerData/fthDividerDefaultChannels.dat\n"   > initfile
#    printf "caput -S ${Prefix}:DATA_FILE_SAVE ${scriptdir}/fthDividerData/fthDividerDefaultChannels.dat\n"   > initfile
    printf "caput -S ${Prefix}:DATA_FILE_LOAD /home/clasrun/FT/FThodo/HVDivider/fthDividerDefaultChannels.dat\n" > initfile
    printf "caput -S ${Prefix}:DATA_FILE_SAVE /home/clasrun/FT/FThodo/HVDivider/fthDividerDefaultChannels.dat\n" > initfile

    print "#Init tables for positions of channels etc\n\n" > initfile 

    printf "caput -a ${Prefix}:X_TABLE 240 " > initfile	
    for(divindex=0;divindex<240;divindex++){
	enam=sprintf("S%sE%s",sector[divindex],element[divindex]);
	printf "%d ",xcoord[enam] > initfile
    }
    printf "\n\n" > initfile
    printf "caput -a ${Prefix}:Y_TABLE 240 " > initfile	
    for(divindex=0;divindex<240;divindex++){
	enam=sprintf("S%sE%s",sector[divindex],element[divindex]);
	printf "%d ",ycoord[enam] > initfile
    }
    printf "\n\n" > initfile
    printf "caput -a ${Prefix}:SIZE_TABLE 240 "	 > initfile
    for(divindex=0;divindex<240;divindex++){
	enam=sprintf("S%sE%s",sector[divindex],element[divindex]);
	printf "%d ",tsize[enam] > initfile
    }
  
    printf "\n\n" > initfile
    printf "caput -a ${Prefix}:LAYER_TABLE 240 "	 > initfile
    for(divindex=0;divindex<240;divindex++){
	enam=sprintf("S%sE%s",sector[divindex],element[divindex]);
	printf "%d ",layer[divindex] > initfile
    }
    printf "\n\n" > initfile

    printf "\n\n" > initfile
    printf "caput -a ${Prefix}:HV_TABLE 240 "	 > initfile
    for(divindex=0;divindex<240;divindex++){
	printf "%d ",h[divindex] > initfile
    }
    printf "\n\n" > initfile

    printf "caput -a ${Prefix}:SLOT_TABLE 240 "	 > initfile
    for(divindex=0;divindex<240;divindex++){
	printf "%d ",slot[divindex] > initfile
    }
    printf "\n\n" > initfile
 
    printf "caput -a ${Prefix}:CHAN_TABLE 240 "	 > initfile
    for(divindex=0;divindex<240;divindex++){
	printf "%d ",chan[divindex] > initfile
    }
    printf "\n\n" > initfile
  
    printf "../../scripts/loadDividerChannelsFromFile.sh ${Prefix}" > initfile

    com=sprintf("chmod +x %s", initfile);
    system(com);
  
}
	       
