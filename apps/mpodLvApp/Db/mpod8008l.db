

#
# Records for board MPV.8008l
#

record(stringin, "$(PORT):name")
{
  field(DESC, "$(DESC=)")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(INP,  "@$(HOST) guru %(WO)Name.u$(CH) STRING: 100")
  alias("$(DETALIAS):name")
  info(autosaveFields_pass0,"DESC")
}


record(longin, "$(PORT):group")
{
  field(DESC, "Channel Group Number")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(INP,  "@$(HOST) guru %(WO)Group.u$(CH) INTEGER: 100")
  alias("$(DETALIAS):group")
}

record(longout, "$(PORT):gset")
{
  field(DESC, "Channel Group Number")
  field(DTYP, "Snmp")
  field(OUT,  "@$(HOST) guru %(WO)Group.u$(CH) INTEGER: 100 i")
  alias("$(DETALIAS):gset")
}

record(longout, "$(PORT):switch")
{
  field(DESC, "Turn ON and OFF switch")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(EGU,  "")
  field(OUT,  "@$(HOST) guru %(WO)Switch.u$(CH) ( 100 i")
  alias("$(DETALIAS):switch")
}
record(longin, "$(PORT):switch:fbk")
{
  field(DESC, "Turn ON and OFF switch")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(EGU,  "")
  field(INP,  "@$(HOST) guru %(WO)Switch.u$(CH) ( 100 i")
  alias("$(DETALIAS):switch:fbk")
}

record(ai, "$(PORT):i_rd")
{
  field(DESC, "Current Readback")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "A")
  field(INP,  "@$(HOST) guru %(WO)MeasurementCurrent.u$(CH) Float: 100")
  alias("$(DETALIAS):i_rd")
  alias("$(DETALIAS):imon")
  info(autosaveFields_pass0,"HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ao, "$(PORT):i_set")
{
  field(DESC, "Current Setpoint")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "A")
  field(OUT,  "@$(HOST) guru %(WO)Current.u$(CH) Float: 100 F")
  alias("$(DETALIAS):i_set")
}
record(ai, "$(PORT):i_set:fbk")
{
  field(DESC, "Current Setpoint")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "A")
  field(INP,  "@$(HOST) guru %(WO)Current.u$(CH) Float: 100 F")
  alias("$(DETALIAS):i_set:fbk")
}


record(ao, "$(PORT):i_max_sup")
{
  field(DESC, "Supervision Maximum Currrent")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "A")
  field(OUT,  "@$(HOST) guru %(WO)SupervisionMaxCurrent.u$(CH) Float: 100 F")
  alias("$(DETALIAS):i_max_sup")
}
record(ai, "$(PORT):i_max_sup:fbk")
{
  field(DESC, "Supervision Maximum Currrent")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "A")
  field(INP,  "@$(HOST) guru %(WO)SupervisionMaxCurrent.u$(CH) Float: 100 F")
  alias("$(DETALIAS):i_max_sup:fbk")
}

record(ao, "$(PORT):i_max_cfg")
{
  field(DESC, "Config Maximum Currrent")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "A")
  field(OUT,  "@$(HOST) guru %(WO)ConfigMaxCurrent.u$(CH) Float: 100 F")
  alias("$(DETALIAS):i_max_cfg")
}
record(ai, "$(PORT):i_max_cfg:fbk")
{
  field(DESC, "Config Maximum Currrent")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "A")
  field(INP,  "@$(HOST) guru %(WO)ConfigMaxCurrent.u$(CH) Float: 100 F")
  alias("$(DETALIAS):i_max_cfg:fbk")
}

#record(ai, "$(PORT):i_lim_hw")
#{
#  field(DESC, "Hardware Limit for Currrent")
#  field(DTYP, "Snmp")
#  field(SCAN, "$(SCAN)")
#  field(PREC, "3")
#  field(EGU,  "A")
#  field(INP,  "@$(HOST) guru %(WO)HardwareLimitCurrent.u$(CH) Float: 100")
#  alias("$(DETALIAS):i_lim_hw")
#}


record(longout, "$(PORT):i_trip_time")
{
  field(DESC, "Span for Time out Function.")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(EGU,  "")
  field(OUT,  "@$(HOST) guru %(WO)TripTimeMaxCurrent.u$(CH) INTEGER: 100 i")
  alias("$(DETALIAS):i_trip_time")
}
record(longin, "$(PORT):i_trip_time:fbk")
{
  field(DESC, "Span for Time out Function.")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(EGU,  "")
  field(INP,  "@$(HOST) guru %(WO)TripTimeMaxCurrent.u$(CH) INTEGER: 100 i")
  alias("$(DETALIAS):i_trip_time:fbk")
}


record(ao, "$(PORT):vrise")
{
  field(DESC, "Voltage  RampUp Rate")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "V/s")
  field(OUT,  "@$(HOST) guru %(WO)VoltageRiseRate.u$(CH) Float: 100 F")
  alias("$(DETALIAS):vrise")
}
record(ai, "$(PORT):vrise:fbk")
{
  field(DESC, "Voltage  RampUp Rate")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V/s")
  field(INP,  "@$(HOST) guru %(WO)VoltageRiseRate.u$(CH) Float: 100 F")
  alias("$(DETALIAS):vrise:fbk")
}


record(ao, "$(PORT):vfall")
{
  field(DESC, "Voltage RampDown Rate")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "V/s")
  field(OUT,  "@$(HOST) guru %(WO)VoltageFallRate.u$(CH) Float: 100 F")
  alias("$(DETALIAS):vfall")
}
record(ai, "$(PORT):vfall:fbk")
{
  field(DESC, "Voltage RampDown Rate")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V/s")
  field(INP,  "@$(HOST) guru %(WO)VoltageFallRate.u$(CH) Float: 100 F")
  alias("$(DETALIAS):vfall:fbk")
}


record(ai, "$(PORT):v_sens")
{
  field(DESC, "Voltage Sensor Readback")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V")
  field(INP,  "@$(HOST) guru %(WO)MeasurementSenseVoltage.u$(CH) Float: 100")
  alias("$(DETALIAS):v_sens")
  alias("$(DETALIAS):vmon")
}

record(ai, "$(PORT):v_term")
{
  field(DESC, "Voltage Terminal Readback")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V")
  field(INP,  "@$(HOST) guru %(WO)MeasurementTerminalVoltage.u$(CH) Float: 100")
  alias("$(DETALIAS):v_term")
}

record(ao, "$(PORT):v_set")
{
  field(DESC, "Voltage Setpoint")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "V")
  field(OUT,  "@$(HOST) guru %(WO)Voltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_set")
}
record(ai, "$(PORT):v_set:fbk")
{
  field(DESC, "Voltage Setpoint")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V")
  field(INP,  "@$(HOST) guru %(WO)Voltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_set:fbk")
}


record(ao, "$(PORT):v_min_sens_sup")
{
  field(DESC, "Supervision Minimum Sensor Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "V")
  field(OUT,  "@$(HOST) guru %(WO)SupervisionMinSenseVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_min_sens_sup")
}
record(ai, "$(PORT):v_min_sens_sup:fbk")
{
  field(DESC, "Supervision Minimum Sensor Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V")
  field(INP,  "@$(HOST) guru %(WO)SupervisionMinSenseVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_min_sens_sup:fbk")
}


record(ao, "$(PORT):v_max_sens_sup")
{
  field(DESC, "Supervision Maximum Sensor Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "V")
  field(OUT,  "@$(HOST) guru %(WO)SupervisionMaxSenseVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_max_sens_sup")
}
record(ai, "$(PORT):v_max_sens_sup:fbk")
{
  field(DESC, "Supervision Maximum Sensor Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V")
  field(INP,  "@$(HOST) guru %(WO)SupervisionMaxSenseVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_max_sens_sup:fbk")
}


record(ao, "$(PORT):v_max_term_sup")
{
  field(DESC, "Supervision Maximum Terminal Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "V")
  field(OUT,  "@$(HOST) guru %(WO)SupervisionMaxTerminalVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_max_term_sup")
}
record(ai, "$(PORT):v_max_term_sup:fbk")
{
  field(DESC, "Supervision Maximum Terminal Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V")
  field(INP,  "@$(HOST) guru %(WO)SupervisionMaxTerminalVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_max_term_sup:fbk")
}

record(ao, "$(PORT):v_max_sens_cfg")
{
  field(DESC, "Config Maximum Sensor Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "V")
  field(OUT,  "@$(HOST) guru %(WO)ConfigMaxSenseVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_max_sens_cfg")
}
record(ai, "$(PORT):v_max_sens_cfg:fbk")
{
  field(DESC, "Config Maximum Sensor Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V")
  field(INP,  "@$(HOST) guru %(WO)ConfigMaxSenseVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_max_sens_cfg:fbk")
}


record(ao, "$(PORT):v_max_term_cfg")
{
  field(DESC, "Config Maximum Terminal Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "V")
  field(OUT,  "@$(HOST) guru %(WO)ConfigMaxTerminalVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_max_term_cfg")
}
record(ai, "$(PORT):v_max_term_cfg:fbk")
{
  field(DESC, "Config Maximum Terminal Voltage")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(PREC, "3")
  field(EGU,  "V")
  field(INP,  "@$(HOST) guru %(WO)ConfigMaxTerminalVoltage.u$(CH) Float: 100 F")
  alias("$(DETALIAS):v_max_term_cfg:fbk")
}


#record(ai, "$(PORT):v_lim_hw")
#{
#  field(DESC, "Hardware Limit for Voltage")
#  field(DTYP, "Snmp")
#  field(SCAN, "$(SCAN)")
#  field(PREC, "3")
#  field(EGU,  "V")
#  field(INP,  "@$(HOST) guru %(WO)HardwareLimitVoltage.u$(CH) Float: 100")
#  alias("$(DETALIAS):v_lim_hw")
#}


record(longin, "$(PORT):temp")
{
  field(DESC, "Hotspot Temperature")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(INP,  "@$(HOST) guru %(WO)MeasurementTemperature.u$(CH) INTEGER: 100")
  alias("$(DETALIAS):temp")
}

#record(longin, "$(PORT):max_temp_cfg")
#{
#  field(DESC, "Config Maximum Temperature")
#  field(DTYP, "Snmp")
#  field(SCAN, "$(SCAN)")
#  field(INP,  "@$(HOST) guru %(WO)ConfigMaxTemperature.u$(CH) INTEGER: 100")
#  alias("$(DETALIAS):max_temp_cfg")
#}



#record(longout, "$(PORT):regul")
#{
#  field(DESC, "Turn ON and OFF switch")
#  field(DTYP, "Snmp")
#  field(SCAN, "Passive")
#  field(EGU,  "")
#  field(OUT,  "@$(HOST) guru %(WO)RegulationMode.u$(CH) ( 100 i")
#  alias("$(DETALIAS):regul")
#}


record(longout, "$(PORT):sup_behavior")
{
  field(DESC, "Supervision Behavior")
  field(DTYP, "Snmp")
  field(SCAN, "Passive")
  field(OUT,  "@$(HOST) guru %(WO)SupervisionBehavior.u$(CH) INTEGER: 100 i")
  alias("$(DETALIAS):sup_behavior")
}

record(longin, "$(PORT):sup_behavior:fbk")
{
  field(DESC, "Supervision Behavior readback")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(INP,  "@$(HOST) guru %(WO)SupervisionBehavior.u$(CH) INTEGER: 100 i")
  alias("$(DETALIAS):sup_behavior:fbk")
}

# bit-3 is whether to use sense-line voltage (0=yes, 1=no)
record(longin,"$(PORT):output_user_config:fbk") {
  field(DESC,"Output Channel Behavior")
  field(SCAN,"$(SCAN)")
  field(DTYP,"Snmp")
  field(EGU,  "")
  field(INP,"@$(HOST) guru %{WO}UserConfig.u$(CH) INTEGER: 80")
  alias("$(DETALIAS):output_user_config:fbk")
}
record(longout,"$(PORT):output_user_config") {
  field(DESC,"Output Channel Behavior")
  field(DTYP,"Snmp")
  field(OUT,"@$(HOST) guru %{WO}UserConfig.u$(CH) INTEGER: 80 i")
  alias("$(DETALIAS):output_user_config")
}


record(longin, "$(PORT):stat")
{
  field(DESC, "Channel Status")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(INP,  "@$(HOST) guru %(WO)Status.u$(CH) BITS: 100")
  alias("$(DETALIAS):stat")
  alias("$(DETALIAS):mpod:stat")
}

record(stringin, "$(PORT):stat_string")
{
  field(DESC, "Channel Status in String")
  field(DTYP, "Snmp")
  field(SCAN, "$(SCAN)")
  field(INP,  "@$(HOST) guru %(WO)Status.u$(CH) BITS: 100")
  alias("$(DETALIAS):stat_string")
}

record(aSub,"$(PORT):parse:stat")
{
	field( DESC, "HW status string parser")
    alias("$(DETALIAS):parse:stat")
	field( SCAN, "Passive")
	field( INAM, "MpodStatusParserInit")
	field( SNAM, "MpodStatusParserProcess")
	# Input stat_string
	field( INPA, "$(PORT):stat_string CPP MS")
	field(  FTA, "STRING")
	field(  NOA, "1")
	field(  NEA, "1")
	# Input stat_string.STAT to check is the HW channel exists
	field( INPB, "$(PORT):stat.STAT CPP MS")
	field(  FTB, "USHORT")
	field(  NOB, "1")
	field(  NEB, "1")	
	# Output into mbbiDirect record which can keep maximum 16bit
	field( OUTA, "$(PORT):parsed:status.RVAL PP MS")
	field( FTVA, "ULONG")
	field( NOVA, "1")
	field( NEVA, "1")
	# Output into bi record which can keep maximum 1bit
	field( OUTB, "$(PORT):parsed:stat PP MS")
	field( FTVB, "USHORT")
	field( NOVB, "1")
	field( NEVB, "1")
	# Output into stringin record which can keep maximum 80 characters
	field( OUTC, "$(PORT):parsed:stat_string PP MS")
	field( FTVC, "STRING")
	field( NOVC, "1")
	field( NEVC, "1")
	# Output into mbbi record
	field( OUTD, "$(PORT):parsed:status2 PP MS")
	field( FTVD, "STRING")
	field( NOVD, "1")
	field( NEVD, "1")
}
record( stringin, "$(PORT):parsed:stat_string")
{
	field( DESC, "HW status parsed string")
	field( SCAN, "Passive")
    alias("$(DETALIAS):parsed:stat_string")
}

# FIXME: this one should go away:
record( mbbiDirect, "$(PORT):parsed:status")
{
	field( DESC, "HW status parsed result")
	field( DTYP, "Raw Soft Channel")
	field( SCAN, "Passive")
    alias("$(DETALIAS):parsed:status")
}
record( mbbi, "$(PORT):parsed:status2")
{
	field( DESC, "HW status parsed result")
	field( DTYP, "Soft Channel")
	field( SCAN, "Passive")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRVL, "4")
    field( FVVL, "5")
    field( SXVL, "6")
    field( SVVL, "7")
    field( EIVL, "8")
    field( NIVL, "9")
    field( TEVL, "10")
    field( ELVL, "11")
    field( TVVL, "12")
    field( TTVL, "13")
    field( FTVL, "14")
    field( FFVL, "15")
    field( ZRST, "OFF")
    field( ONST, "ON")
    field( TWST, "CC")
    field( THST, "CV")
    field( FRST, "ADJ")
    field( FVST, "RUP")
    field( SXST, "RDN")
    field( SVST, "ExtIn")
    field( EIST, "SVMin")
    field( NIST, "SVMax")
    field( TEST, "TVMax")
    field( ELST, "IMax")
    field( TVST, "TMax")
    field( TTST, "Error")
    field( FTST, "EmergOff")
    field( FFST, "KillEn")
    field(ZRSV,  "NO_ALARM")
    field(ONSV,  "NO_ALARM")
    field(TWSV,  "MAJOR")
    field(THSV,  "MAJOR")
    field(FRSV,  "MINOR")
    field(FVSV,  "MINOR")
    field(SXSV,  "MINOR")
    field(SVSV,  "MAJOR")
    field(EISV,  "MAJOR")
    field(NISV,  "MAJOR")
    field(TESV,  "MAJOR")
    field(ELSV,  "MAJOR")
    field(TVSV,  "MAJOR")
    field(TTSV,  "MAJOR")
    field(FTSV,  "MAJOR")
    field(FFSV,  "MAJOR")
    alias("$(DETALIAS):parsed:status2")
}
record( bi, "$(PORT):parsed:stat")
{
	field( DESC, "HW status parsed result")
	field( SCAN, "Passive")
	field( ZNAM, "Alarmed")
	field( ONAM, "NO_ALARM")
	field( ZSV, "MAJOR")
	field( OSV, "NO_ALARM")
    alias("$(DETALIAS):parsed:stat")
}


#
# Breakout outputSupervisionBehavior into separate mbbis:
#   (couldn't figure it out with mbbi's MASK+NOBT+SHFT)
# 
record(calcout, "$(PORT):sup_behavior:min_sense_v:fbk:calc")
{
    field(INPA, "$(PORT):sup_behavior:fbk CP")
    field(CALC, "( A >> 0 ) & 3")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    field(OUT,  "$(PORT):sup_behavior:min_sense_v:fbk PP")
    alias("$(DETALIAS):sup_behavior:min_sense_v:fbk:calc")
}
record(calcout, "$(PORT):sup_behavior:max_sense_v:fbk:calc")
{
    field(INPA, "$(PORT):sup_behavior:fbk CP")
    field(CALC, "( A >> 2 ) & 3")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    field(OUT,  "$(PORT):sup_behavior:max_sense_v:fbk PP")
    alias("$(DETALIAS):sup_behavior:max_sense_v:fbk:calc")
}
record(calcout, "$(PORT):sup_behavior:max_term_v:fbk:calc")
{
    field(INPA, "$(PORT):sup_behavior:fbk CP")
    field(CALC, "( A >> 4 ) & 3")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    field(OUT,  "$(PORT):sup_behavior:max_term_v:fbk PP")
    alias("$(DETALIAS):sup_behavior:max_term_v:fbk:calc")
}
record(calcout, "$(PORT):sup_behavior:max_i:fbk:calc")
{
    field(INPA, "$(PORT):sup_behavior:fbk CP")
    field(CALC, "( A >> 6 ) & 3")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    field(OUT,  "$(PORT):sup_behavior:max_i:fbk PP")
    alias("$(DETALIAS):sup_behavior:max_i:fbk:calc")
}
record(calcout, "$(PORT):sup_behavior:max_temp:fbk:calc")
{
    field(INPA, "$(PORT):sup_behavior:fbk CP")
    field(CALC, "( A >> 8 ) & 3")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    field(OUT,  "$(PORT):sup_behavior:max_temp:fbk PP")
    alias("$(DETALIAS):sup_behavior:max_temp:fbk:calc")
}
record(calcout, "$(PORT):sup_behavior:max_power:fbk:calc")
{
    field(INPA, "$(PORT):sup_behavior:fbk CP")
    field(CALC, "( A >> 10 ) & 3")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    field(OUT,  "$(PORT):sup_behavior:max_power:fbk PP")
    alias("$(DETALIAS):sup_behavior:max_power:fbk:calc")
}
record(calcout, "$(PORT):sup_behavior:inhibit:fbk:calc")
{
    field(INPA, "$(PORT):sup_behavior:fbk CP")
    field(CALC, "( A >> 12 ) & 3")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    field(OUT,  "$(PORT):sup_behavior:inhibit:fbk PP")
    alias("$(DETALIAS):sup_behavior:inhibit:fbk:calc")
}
record(calcout, "$(PORT):sup_behavior:timeout:fbk:calc")
{
    field(INPA, "$(PORT):sup_behavior:fbk CP")
    field(CALC, "( A >> 14 ) & 3")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    field(OUT,  "$(PORT):sup_behavior:timeout:fbk PP")
    alias("$(DETALIAS):sup_behavior:timeout:fbk:calc")
}
record(mbbi, "$(PORT):sup_behavior:min_sense_v:fbk")
{
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    alias("$(DETALIAS):sup_behavior:min_sense_v:fbk")
}
record(mbbi, "$(PORT):sup_behavior:max_sense_v:fbk")
{
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    alias("$(DETALIAS):sup_behavior:max_sense_v:fbk")
}
record(mbbi, "$(PORT):sup_behavior:max_term_v:fbk")
{
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    alias("$(DETALIAS):sup_behavior:max_term_v:fbk")
}
record(mbbi, "$(PORT):sup_behavior:max_i:fbk")
{
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    alias("$(DETALIAS):sup_behavior:max_i:fbk")
}
record(mbbi, "$(PORT):sup_behavior:max_temp:fbk")
{
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    alias("$(DETALIAS):sup_behavior:max_temp:fbk")
}
record(mbbi, "$(PORT):sup_behavior:max_power:fbk")
{
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    alias("$(DETALIAS):sup_behavior:max_power:fbk")
}
record(mbbi, "$(PORT):sup_behavior:timeout:fbk")
{
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    alias("$(DETALIAS):sup_behavior:timeout:fbk")
}
record(mbbi, "$(PORT):sup_behavior:inhibit:fbk")
{
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    alias("$(DETALIAS):sup_behavior:inhibit:fbk")
}


#
# Breakout outputSupervisionBehavior outputs, to
# preserve 
#
#
record(mbbo, "$(PORT):sup_behavior:min_sense_v")
{
    field(VAL, 1)
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    field(FLNK,"$(PORT):sup_behavior:min_sense_v:calc.PROC")
    alias("$(DETALIAS):sup_behavior:min_sense_v")
#    info(autosaveFields_pass0,"VAL")
}
record(mbbo, "$(PORT):sup_behavior:max_sense_v")
{
    field(VAL, 1)
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    field(FLNK,"$(PORT):sup_behavior:max_sense_v:calc.PROC")
    alias("$(DETALIAS):sup_behavior:max_sense_v")
#    info(autosaveFields_pass0,"VAL")
}
record(mbbo, "$(PORT):sup_behavior:max_term_v")
{
    field(VAL, 1)
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    field(FLNK,"$(PORT):sup_behavior:max_term_v:calc.PROC")
    alias("$(DETALIAS):sup_behavior:max_term_v")
#    info(autosaveFields_pass0,"VAL")
}
record(mbbo, "$(PORT):sup_behavior:max_i")
{
    field(VAL, 1)
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    field(FLNK,"$(PORT):sup_behavior:max_i:calc.PROC")
    alias("$(DETALIAS):sup_behavior:max_i")
#    info(autosaveFields_pass0,"VAL")
}
record(mbbo, "$(PORT):sup_behavior:max_temp")
{
    field(VAL, 1)
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    field(FLNK,"$(PORT):sup_behavior:max_temp:calc.PROC")
    alias("$(DETALIAS):sup_behavior:max_temp")
#    info(autosaveFields_pass0,"VAL")
}
record(mbbo, "$(PORT):sup_behavior:max_power")
{
    field(VAL, 1)
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    field(FLNK,"$(PORT):sup_behavior:max_power:calc.PROC")
    alias("$(DETALIAS):sup_behavior:max_power")
#    info(autosaveFields_pass0,"VAL")
}
record(mbbo, "$(PORT):sup_behavior:inhibit")
{
    field(VAL, 1)
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    field(FLNK,"$(PORT):sup_behavior:inhibit:calc.PROC")
    alias("$(DETALIAS):sup_behavior:inhibit")
#    info(autosaveFields_pass0,"VAL")
}
record(mbbo, "$(PORT):sup_behavior:timeout")
{
    field(VAL, 1)
    field(ZRVL,0)
    field(ONVL,1)
    field(TWVL,2)
    field(THVL,3)
    field(ZRST,"Ignore")
    field(ONST,"Channel Off")
    field(TWST,"Group Off")
    field(THST,"Crate Off")
    field(FLNK,"$(PORT):sup_behavior:timeout:calc.PROC")
    alias("$(DETALIAS):sup_behavior:timeout")
#    info(autosaveFields_pass0,"VAL")
}
record(calcout, "$(PORT):sup_behavior:min_sense_v:calc") {
    field(OUT,  "$(PORT):sup_behavior PP")
    field(INPA, "$(PORT):sup_behavior:fbk")
    field(INPB, "$(PORT):sup_behavior:min_sense_v")
    field(CALC, "( A & ~(0x3<<0) ) | (B<<0)")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    alias("$(DETALIAS):sup_behavior:min_sense_v:calc")
}
record(calcout, "$(PORT):sup_behavior:max_sense_v:calc") {
    field(OUT,  "$(PORT):sup_behavior PP")
    field(INPA, "$(PORT):sup_behavior:fbk")
    field(INPB, "$(PORT):sup_behavior:max_sense_v")
    field(CALC, "( A & ~(0x3<<2) ) | (B<<2)")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    alias("$(DETALIAS):sup_behavior:max_sense_v:calc")
}
record(calcout, "$(PORT):sup_behavior:max_term_v:calc") {
    field(OUT,  "$(PORT):sup_behavior PP")
    field(INPA, "$(PORT):sup_behavior:fbk")
    field(INPB, "$(PORT):sup_behavior:max_term_v")
    field(CALC, "( A & ~(0x3<<4) ) | (B<<4)")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    alias("$(DETALIAS):sup_behavior:max_term_v:calc")
}
record(calcout, "$(PORT):sup_behavior:max_i:calc") {
    field(OUT,  "$(PORT):sup_behavior PP")
    field(INPA, "$(PORT):sup_behavior:fbk")
    field(INPB, "$(PORT):sup_behavior:max_i")
    field(CALC, "( A & ~(0x3<<6) ) | (B<<6)")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    alias("$(DETALIAS):sup_behavior:max_i:calc")
}
record(calcout, "$(PORT):sup_behavior:max_temp:calc") {
    field(OUT,  "$(PORT):sup_behavior PP")
    field(INPA, "$(PORT):sup_behavior:fbk")
    field(INPB, "$(PORT):sup_behavior:max_temp")
    field(CALC, "( A & ~(0x3<<8) ) | (B<<8)")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    alias("$(DETALIAS):sup_behavior:max_temp:calc")
}
record(calcout, "$(PORT):sup_behavior:max_power:calc") {
    field(OUT,  "$(PORT):sup_behavior PP")
    field(INPA, "$(PORT):sup_behavior:fbk")
    field(INPB, "$(PORT):sup_behavior:max_power")
    field(CALC, "( A & ~(0x3<<10) ) | (B<<10)")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    alias("$(DETALIAS):sup_behavior:max_power:calc")
}
record(calcout, "$(PORT):sup_behavior:inhibit:calc") {
    field(OUT,  "$(PORT):sup_behavior PP")
    field(INPA, "$(PORT):sup_behavior:fbk")
    field(INPB, "$(PORT):sup_behavior:inhibit")
    field(CALC, "( A & ~(0x3<<12) ) | (B<<12)")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    alias("$(DETALIAS):sup_behavior:inhibit:calc")
}
record(calcout, "$(PORT):sup_behavior:timeout:calc") {
    field(OUT,  "$(PORT):sup_behavior PP")
    field(INPA, "$(PORT):sup_behavior:fbk")
    field(INPB, "$(PORT):sup_behavior:timeout")
    field(CALC, "( A & ~(0x3<<14) ) | (B<<14)")
    field(DOPT, "Use CALC")
    field(OOPT, "Every Time")
    alias("$(DETALIAS):sup_behavior:timeout:calc")
}

