#
# Modification of std's scaler16m.db
#
# Added normalization calcs, they mirror cts1&2.  Added OUTA-P assignments to 
# match the previously used convention.  This may change in the future, autosave
# should be used to maintain these fields.
#
# Author: Wesley Moore, wmoore@jlab.org
# Date:   Sept 2015
#

# Begin scaler16m.db mod
# This is a modification of scaler16.db that takes advantage of the COPT field of the
# transform record (allows a calc expression to be evaluated even though there is an
# associated input link) to condense end calcs from four transform records to two.
record(bo, "$(P)$(S)_calcEnable") {
  field(DTYP, "Soft Channel")
  field(ZNAM, "ENABLE")
  field(ONAM, "DISABLE")
}

record(bo, "$(P)$(S)_calc_ctrl") {
  field(DTYP, "Soft Channel")
  field(FLNK, "$(P)$(S)_cts1.PROC  PP MS")
  field(ZNAM, "Counts")
  field(ONAM, "Cts/sec")
}

record(transform, "$(P)$(S)_calc1") {
  field(FLNK, "$(P)$(S)_norm1.PROC")
  field(CLCB, "B")
  field(CLCC, "C")
  field(CLCD, "D")
  field(CLCE, "E")
  field(CLCF, "F")
  field(CLCG, "G")
  field(CLCH, "H")
  field(CLCI, "I")
  field(CLCJ, "J")
  field(CLCK, "K")
  field(CLCL, "L")
  field(CLCM, "M")
  field(CLCN, "N")
  field(CLCO, "O")
  field(CLCP, "P")
  field(INPA, "$(P)$(S).T")
  field(INPB, "$(P)$(S).S2  NPP NMS")
  field(INPC, "$(P)$(S).S3  NPP NMS")
  field(INPD, "$(P)$(S).S4  NPP NMS")
  field(INPE, "$(P)$(S).S5  NPP NMS")
  field(INPF, "$(P)$(S).S6  NPP NMS")
  field(INPG, "$(P)$(S).S7  NPP NMS")
  field(INPH, "$(P)$(S).S8  NPP NMS")
  field(INPI, "$(P)$(S).S9  NPP NMS")
  field(INPJ, "$(P)$(S).S10  NPP NMS")
  field(INPK, "$(P)$(S).S11  NPP NMS")
  field(INPL, "$(P)$(S).S12  NPP NMS")
  field(INPM, "$(P)$(S).S13  NPP NMS")
  field(INPN, "$(P)$(S).S14  NPP NMS")
  field(INPO, "$(P)$(S).S15  NPP NMS")
  field(INPP, "$(P)$(S).S16  NPP NMS")
  field(COPT, "Always")
  field(PREC, "3")
}

record(scaler, "$(P)$(S)") {
  field(DTYP, "$(DTYP)")
  field(PRIO, "HIGH")
  field(FLNK, "$(P)$(S)_cts1.PROC  PP MS")
  field(FREQ, "$(FREQ)")
  field(OUT, "$(OUT)")
  field(PREC, "3")
}

record(transform, "$(P)$(S)_cts1") {
  field(SDIS, "$(P)$(S)_calcEnable.VAL  NPP NMS")
  field(FLNK, "$(P)$(S)_cts2.PROC  PP MS")
  field(COPT, "Always")
  field(CLCA, "MAX(a,0.000001)")
  field(CLCB, "j?b/a:b")
  field(CLCC, "j?c/a:c")
  field(CLCD, "j?d/a:d")
  field(CLCE, "j?e/a:e")
  field(CLCF, "j?f/a:f")
  field(CLCG, "j?g/a:g")
  field(CLCH, "j?h/a:h")
  field(CLCI, "j?i/a:i")
  field(INPA, "$(P)$(S).T  NPP NMS")
  field(INPB, "$(P)$(S).S1  NPP NMS")
  field(INPC, "$(P)$(S).S2  NPP NMS")
  field(INPD, "$(P)$(S).S3  NPP NMS")
  field(INPE, "$(P)$(S).S4  NPP NMS")
  field(INPF, "$(P)$(S).S5 NPP NMS")
  field(INPG, "$(P)$(S).S6  NPP NMS")
  field(INPH, "$(P)$(S).S7  NPP NMS")
  field(INPI, "$(P)$(S).S8  NPP NMS")
  field(INPJ, "$(P)$(S)_calc_ctrl.VAL  NPP NMS")
  field(OUTB, "$(P)$(S)S1a")
  field(OUTC, "$(P)$(S)S2a")
  field(OUTD, "$(P)$(S)S3a")
  field(OUTE, "$(P)$(S)S4a")
  field(OUTF, "$(P)$(S)S5a")
  field(OUTG, "$(P)$(S)S6a")
  field(OUTH, "$(P)$(S)S7a")
  field(OUTI, "$(P)$(S)S8a")
  field(PREC, "3")
}

record(transform, "$(P)$(S)_cts2") {
  field(FLNK, "$(P)$(S)_calc1.PROC  PP MS")
  field(COPT, "Always")
  field(CLCB, "j?b/a:b")
  field(CLCC, "j?c/a:c")
  field(CLCD, "j?d/a:d")
  field(CLCE, "j?e/a:e")
  field(CLCF, "j?f/a:f")
  field(CLCG, "j?g/a:g")
  field(CLCH, "j?h/a:h")
  field(CLCI, "j?i/a:i")
  field(INPA, "$(P)$(S)_cts1.A  NPP NMS")
  field(INPB, "$(P)$(S).S9  NPP NMS")
  field(INPC, "$(P)$(S).S10  NPP NMS")
  field(INPD, "$(P)$(S).S11  NPP NMS")
  field(INPE, "$(P)$(S).S12  NPP NMS")
  field(INPF, "$(P)$(S).S13 NPP NMS")
  field(INPG, "$(P)$(S).S14  NPP NMS")
  field(INPH, "$(P)$(S).S15  NPP NMS")
  field(INPI, "$(P)$(S).S16  NPP NMS")
  field(INPJ, "$(P)$(S)_calc_ctrl.VAL  NPP NMS")
  field(OUTB, "$(P)$(S)S9b")
  field(OUTC, "$(P)$(S)S10b")
  field(OUTD, "$(P)$(S)S11b")
  field(OUTE, "$(P)$(S)S12b")
  field(OUTF, "$(P)$(S)S13b")
  field(OUTG, "$(P)$(S)S14b")
  field(OUTH, "$(P)$(S)S15b")
  field(OUTI, "$(P)$(S)S16b")
  field(PREC, "3")
}
# End scaler16m.db mod

#
# Normalize scaler values, divide by the beam current.  Note, this is
# to be paired with stdApps's scaler16m.db.  Use calc's transform_settings.req
# to save the settings for each transform.

# Normalize scaler value, divides cts by beam current
#   calc_ctrl  - counts or cts/sec
record(transform, "$(P)$(S)_norm1") {
    field(DESC, "Scaler Normalized")
    field(SDIS, "$(P)$(S)_calcEnable.VAL  NPP NMS")
    field(FLNK, "$(P)$(S)_norm2.PROC")
    field(COPT, "Always")
    field(CLCB, "(j && a>0.010)?b/a:b")
    field(CLCC, "(j && a>0.010)?c/a:c")
    field(CLCD, "(j && a>0.010)?d/a:d")
    field(CLCE, "(j && a>0.010)?e/a:e")
    field(CLCF, "(j && a>0.010)?f/a:f")
    field(CLCG, "(j && a>0.010)?g/a:g")
    field(CLCH, "(j && a>0.010)?h/a:h")
    field(CLCI, "(j && a>0.010)?i/a:i")
    field(INPA, "HLB:bta_main_cur.VAL")
    field(INPB, "$(P)$(S)_cts1.B")
    field(INPC, "$(P)$(S)_cts1.C")
    field(INPD, "$(P)$(S)_cts1.D")
    field(INPE, "$(P)$(S)_cts1.E")
    field(INPF, "$(P)$(S)_cts1.F")
    field(INPG, "$(P)$(S)_cts1.G")
    field(INPH, "$(P)$(S)_cts1.H")
    field(INPI, "$(P)$(S)_cts1.I")
    field(INPJ, "$(P)$(S)_calc_ctrl.VAL")
    field(OUTB, "$(P)$(S)S1b")
    field(OUTC, "$(P)$(S)S2b")
    field(OUTD, "$(P)$(S)S3b")
    field(OUTE, "$(P)$(S)S4b")
    field(OUTF, "$(P)$(S)S5b")
    field(OUTG, "$(P)$(S)S6b")
    field(OUTH, "$(P)$(S)S7b")
    field(OUTI, "$(P)$(S)S8b")
    field(PREC,"3")
}

record(transform, "$(P)$(S)_norm2") {
    field(DESC, "Scaler Normalized")
    field(SDIS, "$(P)$(S)_calcEnable.VAL  NPP NMS")
    field(COPT, "Always")
    field(CLCB, "(j && a>0.010)?b/a:b")
    field(CLCC, "(j && a>0.010)?c/a:c")
    field(CLCD, "(j && a>0.010)?d/a:d")
    field(CLCE, "(j && a>0.010)?e/a:e")
    field(CLCF, "(j && a>0.010)?f/a:f")
    field(CLCG, "(j && a>0.010)?g/a:g")
    field(CLCH, "(j && a>0.010)?h/a:h")
    field(CLCI, "(j && a>0.010)?i/a:i")
    field(INPA, "HLB:bta_main_cur.VAL")
    field(INPB, "$(P)$(S)_cts2.B")
    field(INPC, "$(P)$(S)_cts2.C")
    field(INPD, "$(P)$(S)_cts2.D")
    field(INPE, "$(P)$(S)_cts2.E")
    field(INPF, "$(P)$(S)_cts2.F")
    field(INPG, "$(P)$(S)_cts2.G")
    field(INPH, "$(P)$(S)_cts2.H")
    field(INPI, "$(P)$(S)_cts2.I")
    field(INPJ, "$(P)$(S)_calc_ctrl.VAL")
    field(OUTB, "$(P)$(S)S9b")
    field(OUTC, "$(P)$(S)S10b")
    field(OUTD, "$(P)$(S)S11b")
    field(OUTE, "$(P)$(S)S12b")
    field(OUTF, "$(P)$(S)S13b")
    field(OUTG, "$(P)$(S)S14b")
    field(OUTH, "$(P)$(S)S15b")
    field(OUTI, "$(P)$(S)S16b")
    field(PREC,"3")
}

#
# ao's used for mapping transform outputs
#

# for cts/s values (cts1/2 OUTB-I)
record(ao,"$(P)$(S)S1a"){}
record(ao,"$(P)$(S)S2a"){}
record(ao,"$(P)$(S)S3a"){}
record(ao,"$(P)$(S)S4a"){}
record(ao,"$(P)$(S)S5a"){}
record(ao,"$(P)$(S)S6a"){}
record(ao,"$(P)$(S)S7a"){}
record(ao,"$(P)$(S)S8a"){}
record(ao,"$(P)$(S)S9a"){}
record(ao,"$(P)$(S)S10a"){}
record(ao,"$(P)$(S)S11a"){}
record(ao,"$(P)$(S)S12a"){}
record(ao,"$(P)$(S)S13a"){}
record(ao,"$(P)$(S)S14a"){}
record(ao,"$(P)$(S)S15a"){}
record(ao,"$(P)$(S)S16a"){}

# for normalized values (norm1/2 OUTB-I)
record(ao,"$(P)$(S)S1b"){}
record(ao,"$(P)$(S)S2b"){}
record(ao,"$(P)$(S)S3b"){}
record(ao,"$(P)$(S)S4b"){}
record(ao,"$(P)$(S)S5b"){}
record(ao,"$(P)$(S)S6b"){}
record(ao,"$(P)$(S)S7b"){}
record(ao,"$(P)$(S)S8b"){}
record(ao,"$(P)$(S)S9b"){}
record(ao,"$(P)$(S)S10b"){}
record(ao,"$(P)$(S)S11b"){}
record(ao,"$(P)$(S)S12b"){}
record(ao,"$(P)$(S)S13b"){}
record(ao,"$(P)$(S)S14b"){}
record(ao,"$(P)$(S)S15b"){}
record(ao,"$(P)$(S)S16b"){}

