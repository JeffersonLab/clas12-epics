#
# scaler16m_addon.db
#
# Normalize scaler values, divide by the beam current.  Note, this is
# to be paired with stdApps's scaler16m.db.  Use calc's transform_settings.req
# to save the settings for each transform.
# 
# Example:
#   dbLoadRecords("scaler16m.db",       "P=My:,S=Scaler:")
#   dbLoadRecords("scaler16m_addon.db", "P=My:,S=Scaler:")
#
# Author: Wesley Moore (wmoore@jlab.org)
# Date:   Sept 2015
#

# Normalize scaler value, divides cts by beam current
#   calc_ctrl  - counts or cts/sec
record(transform, "$(P)$(S)_norm1") {
    field(DESC, "Scaler Normalized")
    field(SDIS, "$(P)$(S)_calcEnable.VAL  NPP NMS")
    field(FLNK, "$(P)$(S)_norm2.PROC")
    field(COPT, "Always")
    field(CLCB, "(j && a>0.010)?b/a:b")
    field(CLCC, "(j && a>0.010)?c/a:c")
    field(CLCD, "(j && a>0.010)?d/a:d")
    field(CLCE, "(j && a>0.010)?e/a:e")
    field(CLCF, "(j && a>0.010)?f/a:f")
    field(CLCG, "(j && a>0.010)?g/a:g")
    field(CLCH, "(j && a>0.010)?h/a:h")
    field(CLCI, "(j && a>0.010)?i/a:i")
    field(INPA, "HLB:bta_main_cur.VAL")
    field(INPB, "$(P)$(S)_cts1.B")
    field(INPC, "$(P)$(S)_cts1.C")
    field(INPD, "$(P)$(S)_cts1.D")
    field(INPE, "$(P)$(S)_cts1.E")
    field(INPF, "$(P)$(S)_cts1.F")
    field(INPG, "$(P)$(S)_cts1.G")
    field(INPH, "$(P)$(S)_cts1.H")
    field(INPI, "$(P)$(S)_cts1.I")
    field(INPJ, "$(P)$(S)_calc_ctrl.VAL")
    field(OUTB, "$(P)$(S)S1b")
    field(OUTC, "$(P)$(S)S2b")
    field(OUTD, "$(P)$(S)S3b")
    field(OUTE, "$(P)$(S)S4b")
    field(OUTF, "$(P)$(S)S5b")
    field(OUTG, "$(P)$(S)S6b")
    field(OUTH, "$(P)$(S)S7b")
    field(OUTI, "$(P)$(S)S8b")
    field(PREC,"3")
}

record(transform, "$(P)$(S)_norm2") {
    field(DESC, "Scaler Normalized")
    field(SDIS, "$(P)$(S)_calcEnable.VAL  NPP NMS")
    field(COPT, "Always")
    field(CLCB, "(j && a>0.010)?b/a:b")
    field(CLCC, "(j && a>0.010)?c/a:c")
    field(CLCD, "(j && a>0.010)?d/a:d")
    field(CLCE, "(j && a>0.010)?e/a:e")
    field(CLCF, "(j && a>0.010)?f/a:f")
    field(CLCG, "(j && a>0.010)?g/a:g")
    field(CLCH, "(j && a>0.010)?h/a:h")
    field(CLCI, "(j && a>0.010)?i/a:i")
    field(INPA, "HLB:bta_main_cur.VAL")
    field(INPB, "$(P)$(S)_cts2.B")
    field(INPC, "$(P)$(S)_cts2.C")
    field(INPD, "$(P)$(S)_cts2.D")
    field(INPE, "$(P)$(S)_cts2.E")
    field(INPF, "$(P)$(S)_cts2.F")
    field(INPG, "$(P)$(S)_cts2.G")
    field(INPH, "$(P)$(S)_cts2.H")
    field(INPI, "$(P)$(S)_cts2.I")
    field(INPJ, "$(P)$(S)_calc_ctrl.VAL")
    field(OUTB, "$(P)$(S)S9b")
    field(OUTC, "$(P)$(S)S10b")
    field(OUTD, "$(P)$(S)S11b")
    field(OUTE, "$(P)$(S)S12b")
    field(OUTF, "$(P)$(S)S13b")
    field(OUTG, "$(P)$(S)S14b")
    field(OUTH, "$(P)$(S)S15b")
    field(OUTI, "$(P)$(S)S16b")
    field(PREC,"3")
}

#
# ao's used for mapping transform outputs
#

# for cts/s values (cts1/2 OUTB-I)
record(ao,"$(P)$(S)S1a"){}
record(ao,"$(P)$(S)S2a"){}
record(ao,"$(P)$(S)S3a"){}
record(ao,"$(P)$(S)S4a"){}
record(ao,"$(P)$(S)S5a"){}
record(ao,"$(P)$(S)S6a"){}
record(ao,"$(P)$(S)S7a"){}
record(ao,"$(P)$(S)S8a"){}
record(ao,"$(P)$(S)S9a"){}
record(ao,"$(P)$(S)S10a"){}
record(ao,"$(P)$(S)S11a"){}
record(ao,"$(P)$(S)S12a"){}
record(ao,"$(P)$(S)S13a"){}
record(ao,"$(P)$(S)S14a"){}
record(ao,"$(P)$(S)S15a"){}
record(ao,"$(P)$(S)S16a"){}

# for normalized values (norm1/2 OUTB-I)
record(ao,"$(P)$(S)S1b"){}
record(ao,"$(P)$(S)S2b"){}
record(ao,"$(P)$(S)S3b"){}
record(ao,"$(P)$(S)S4b"){}
record(ao,"$(P)$(S)S5b"){}
record(ao,"$(P)$(S)S6b"){}
record(ao,"$(P)$(S)S7b"){}
record(ao,"$(P)$(S)S8b"){}
record(ao,"$(P)$(S)S9b"){}
record(ao,"$(P)$(S)S10b"){}
record(ao,"$(P)$(S)S11b"){}
record(ao,"$(P)$(S)S12b"){}
record(ao,"$(P)$(S)S13b"){}
record(ao,"$(P)$(S)S14b"){}
record(ao,"$(P)$(S)S15b"){}
record(ao,"$(P)$(S)S16b"){}

