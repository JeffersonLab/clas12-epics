#asyn is useful for debugging the communication
record(asyn,"$(P)_$(DEV):ASYN"){
	field(DTYP,"asynRecordDevice")
	field(UDF,"0")
	field(PORT,"$(PORT)")
	field(ADDR,"$(ADDR)")
	field(PCNCT,"Connect")
	field(OEOS,"\\r\\n")
	field(OMAX,$(OMAX))
	field(IEOS,"\\r\\n")
	field(IMAX,$(IMAX))
	field(EOMR,"Eos")
	field(TMSK,"1")
	field(TB0,"On")
	field(TSIZ,"80")
	field(TFIL,"Unknown")
	field(AUCT,"autoConnect")
	field(CNCT,"Connect")
	field(ENBL,"Enable")
}

record(stringin,"$(P)_$(DEV):ReadResponse"){
    field (DESC, "Read Response")
    field (DTYP, "stream")
    field (INP,  "@ecoChiller.proto getEcoString() $(PORT)")
}

record(stringout,"$(P)_$(DEV):WriteCommand"){
    field (DESC, "Send command")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoString $(PORT)")
    field (FLNK, "$(P)_$(DEV):ReadResponse")
}


record(ai,"$(P)_$(DEV):GetPV00"){
    field (DESC, "Read external temp")
    field (DTYP, "stream")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PV,00) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPV01"){
    field (DESC, "Read controlled temp")
    field (DTYP, "stream")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PV,01) $(PORT)")
}
#record(ai,"$(P)_$(DEV):GetPV03"){
#    field (DESC, "Read external temp TE (Pt100)")
#    field (DTYP, "stream")
#    field (SCAN, "2 second")
#    field (PREC, "3")
#    field (INP,  "@ecoChiller.proto getEcoValue(PV,03) $(PORT)")
#}
#record(ai,"$(P)_$(DEV):GetPV04"){
#    field (DESC, "Read external temp TE (Analog Input)")
#    field (DTYP, "stream")
#    field (SCAN, "2 second")
#    field (PREC, "3")
#    field (INP,  "@ecoChiller.proto getEcoValue(PV,04) $(PORT)")
#}
record(ai,"$(P)_$(DEV):GetPV10"){
    field (DESC, "Read external temp in 0.0001 deg C")
    field (DTYP, "stream")
    field (SCAN, "2 second")
    field (PREC, "4")
    field (INP,  "@ecoChiller.proto getEcoValue(PV,10) $(PORT)")
}
#record(ai,"$(P)_$(DEV):GetPV13"){
#    field (DESC, "Read external temp TE (Pt100) in 0.0001 deg C")
#    field (DTYP, "stream")
#    field (SCAN, "2 second")
#    field (INP,  "@ecoChiller.proto getEcoValue(PV,13) $(PORT)")
#}


record(ai,"$(P)_$(DEV):GetSP00"){
    field (DESC, "Read temp set value")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(SP,00) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetSP01"){
    field (DESC, "Read pump power level")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (INP,  "@ecoChiller.proto getEcoValue(SP,01) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetSP02"){
    field (DESC, "Read cooling mode")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (INP,  "@ecoChiller.proto getEcoValue(SP,02) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetSP03"){
    field (DESC, "Read overtemp switch-off point")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (INP,  "@ecoChiller.proto getEcoValue(SP,03) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetSP04"){
    field (DESC, "Read outflow temp limit TiH")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(SP,04) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetSP05"){
    field (DESC, "Read outflow temp limit TiL")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(SP,05) $(PORT)")
}



record(ai,"$(P)_$(DEV):GetPAR00"){
    field (DESC, "Read the control parameter Xp")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,00) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPAR01"){
    field (DESC, "Read the control parameter Tn")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,01) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPAR02"){
    field (DESC, "Read the control parameter Tv")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,02) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPAR03"){
    field (DESC, "Read the control parameter Td")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,03) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPAR04"){
    field (DESC, "Read the control parameter KpE")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,04) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPAR05"){
    field (DESC, "Read the control parameter TnE")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,05) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPAR06"){
    field (DESC, "Read the control parameter TvE")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,06) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPAR07"){
    field (DESC, "Read the control parameter TdE")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,07) $(PORT)")
}
#record(ai,"$(P)_$(DEV):GetPAR08"){
#    field (DESC, "Mystery one")
#    field (DTYP, "stream")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoValue(PAR,08) $(PORT)")
#}
record(ai,"$(P)_$(DEV):GetPAR09"){
    field (DESC, "Read the max. outflow temp limit")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,09) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetPAR10"){
    field (DESC, "Read the control parameter XpF")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,10) $(PORT)")
}
#record(ai,"$(P)_$(DEV):GetPAR11"){
#    field (DESC, "Read the control parameter TnF")
#    field (DTYP, "stream")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoValue(PAR,11) $(PORT)")
#}
#record(ai,"$(P)_$(DEV):GetPAR12"){
#   field (DESC, "Read the control parameter TvF")
#    field (DTYP, "stream")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoValue(PAR,12) $(PORT)")
#}
#record(ai,"$(P)_$(DEV):GetPAR13"){
#    field (DESC, "Read the control parameter TdF")
#    field (DTYP, "stream")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoValue(PAR,13) $(PORT)")
#}
record(ai,"$(P)_$(DEV):GetPAR14"){
    field (DESC, "Read setpoint offset")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (PREC, "3")
    field (INP,  "@ecoChiller.proto getEcoValue(PAR,14) $(PORT)")
}


#record(bi, "$(P)_$(DEV):GetDI01"){
#    field (DESC, "Status of Contact Input 1 ")
#    field (DTYP, "stream")
#    field (ZNAM, "0")
#    field (ZNAM, "1")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoBinary(DI,01) $(PORT)")
#}
#record(bi, "$(P)_$(DEV):GetDI02"){
#   field (DESC, "Status of Contact Input 2")
#    field (DTYP, "stream")
#    field (ZNAM, "0")
#    field (ZNAM, "1")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoBinary(DI,02) $(PORT)")
#}
#record(bi, "$(P)_$(DEV):GetDI03"){
#    field (DESC, "Status of Contact Input 3")
#    field (DTYP, "stream")
#    field (ZNAM, "0")
#    field (ZNAM, "1")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoBinary(DI,03) $(PORT)")
#}
#record(bi, "$(P)_$(DEV):GetDO01"){
#    field (DESC, "Status of Contact Input 1")
#    field (DTYP, "stream")
#    field (ZNAM, "0")
#    field (ZNAM, "1")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoBinary(DO,01) $(PORT)")
#}
#record(bi, "$(P)_$(DEV):GetDO02"){
#    field (DESC, "Status of Contact Input 2")
#    field (DTYP, "stream")
#    field (ZNAM, "0")
#    field (ZNAM, "1")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoBinary(DO,02) $(PORT)")
#}
#record(bi, "$(P)_$(DEV):GetDO03"){
#    field (DESC, "Status of Contact Input 3")
#    field (DTYP, "stream")
#    field (ZNAM, "0")
#    field (ZNAM, "1")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoBinary(DO,03) $(PORT)")
#}

record(ai,"$(P)_$(DEV):GetMODE00"){
    field (DESC, "Keypad: 0 = released, 1 = locked. ")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (INP,  "@ecoChiller.proto getEcoValue(MODE,00) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetMODE01"){
    field (DESC, "Control ")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (INP,  "@ecoChiller.proto getEcoValue(MODE,01) $(PORT)")
}
record(ai,"$(P)_$(DEV):GetMODE02"){
    field (DESC, "Standby operation")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (INP,  "@ecoChiller.proto getEcoValue(MODE,02) $(PORT)")
}
#record(ai,"$(P)_$(DEV):GetMODE03"){
#    field (DESC, "Keypad")
#    field (DTYP, "stream")
#    field (PINI, "YES")
#    field (INP,  "@ecoChiller.proto getEcoValue(MODE,03) $(PORT)")
#}
record(ai,"$(P)_$(DEV):GetMODE04"){
    field (DESC, "Setpoint offset source")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (SCAN, "2 second")
    field (INP,  "@ecoChiller.proto getEcoValue(MODE,04) $(PORT)")
}


record(stringin,"$(P)_$(DEV):GetType"){
    field (DESC, "Read device type")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(TYPE) $(PORT)")
}

record(stringin,"$(P)_$(DEV):GetVersionR"){
    field (DESC, "Get sw ver no of the control system")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_R) $(PORT)")
}
record(stringin,"$(P)_$(DEV):GetVersionS"){
    field (DESC, "Get sw ver no of the protection system")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_S) $(PORT)")
}
record(stringin,"$(P)_$(DEV):GetVersionT"){
    field (DESC, "Get sw ver no of the cooling system.")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_T) $(PORT)")
}
record(stringin,"$(P)_$(DEV):GetVersionA"){
    field (DESC, "Get sw ver no of the analogue module")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_A) $(PORT)")
}
record(stringin,"$(P)_$(DEV):GetVersionV"){
    field (DESC, "Get sw ver no of the RS232/485 module")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_V) $(PORT)")
}
record(stringin,"$(P)_$(DEV):GetVersionD"){
    field (DESC, "Get sw ver no of the digital module")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_D) $(PORT)")
}

record(stringin,"$(P)_$(DEV):GetVersionM0"){
    field (DESC, "Get sw ver no of the solenoid valve 0")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_M_0) $(PORT)")
}
record(stringin,"$(P)_$(DEV):GetVersionM1"){
    field (DESC, "Get sw ver no of the solenoid valve 1")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_M_1) $(PORT)")
}
record(stringin,"$(P)_$(DEV):GetVersionM2"){
    field (DESC, "Get sw ver no of the solenoid valve 2")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_M_2) $(PORT)")
}

record(stringin,"$(P)_$(DEV):GetVersionM3"){
    field (DESC, "Get sw ver no of the solenoid valve 3")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_M_3) $(PORT)")
}
record(stringin,"$(P)_$(DEV):GetVersionM4"){
    field (DESC, "Get sw ver no of the solenoid valve 4")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_M_4) $(PORT)")
}

record(stringin,"$(P)_$(DEV):GetVersionM5"){
    field (DESC, "Get sw ver no of the solenoid valve 5")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(VERSION_M_5) $(PORT)")
}


record(stringin,"$(P)_$(DEV):GetStatus"){
    field (DESC, "Read the dev status: 0=OK, -1=Error")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(STATUS) $(PORT)")
}

record(stringin,"$(P)_$(DEV):GetStat"){
    field (DESC, "Read the error diagnosis response")
    field (DTYP, "stream")
    field (PINI, "YES")
    field (INP,  "@ecoChiller.proto getEcoString(STAT) $(PORT)")
}


record(ao,"$(P)_$(DEV):SetPAR00"){
    field (DESC, "Write the control parameter Xp")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,00) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR00")
}
record(ao,"$(P)_$(DEV):SetPAR01"){
    field (DESC, "Write the control parameter Tn")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,01) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR01")
}
record(ao,"$(P)_$(DEV):SetPAR02"){
    field (DESC, "Write the control parameter Tv")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,02) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR02")
}
record(ao,"$(P)_$(DEV):SetPAR03"){
    field (DESC, "Write the control parameter Td")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,03) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR03")
}
record(ao,"$(P)_$(DEV):SetPAR04"){
    field (DESC, "Write the control parameter KpE")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,04) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR04")
}
record(ao,"$(P)_$(DEV):SetPAR05"){
    field (DESC, "Write the control parameter TnE")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,05) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR05")
}
record(ao,"$(P)_$(DEV):SetPAR06"){
    field (DESC, "Write the control parameter TvE")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,06) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR06")
}
record(ao,"$(P)_$(DEV):SetPAR07"){
    field (DESC, "Write the control parameter TdE")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,07) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR07")
}
#record(ao,"$(P)_$(DEV):SetPAR08"){
#    field (DESC, "Mystery one")
#    field (DTYP, "stream")
#    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,08) $(PORT)")
#    field (FLNK, "$(P)_$(DEV):GetPAR08")
#}
record(ao,"$(P)_$(DEV):SetPAR09"){
    field (DESC, "Write the max. outflow temp limit")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,09) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR09")
}
record(ao,"$(P)_$(DEV):SetPAR10"){
    field (DESC, "Write the control parameter XpF")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,10) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR10")
}
#record(ao,"$(P)_$(DEV):SetPAR11"){
#    field (DESC, "Write the control parameter TnF")
#    field (DTYP, "stream")
#    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,11) $(PORT)")
#    field (FLNK, "$(P)_$(DEV):GetPAR11")
#}
#record(ao,"$(P)_$(DEV):SetPAR12"){
#   field (DESC, "Write the control parameter TvF")
#    field (DTYP, "stream")
#    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,12) $(PORT)")
#    field (FLNK, "$(P)_$(DEV):GetPAR12")
#}
#record(ao,"$(P)_$(DEV):SetPAR13"){
#    field (DESC, "Write the control parameter TdF")
#    field (DTYP, "stream")
#    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,13) $(PORT)")
#    field (FLNK, "$(P)_$(DEV):GetPAR13")
#}
record(ao,"$(P)_$(DEV):SetPAR14"){
    field (DESC, "Write setpoint offset")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,14) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR14")
}

record(ao,"$(P)_$(DEV):SetPAR14"){
    field (DESC, "Write setpoint offset")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PAR,14) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetPAR14")
}

record(ao,"$(P)_$(DEV):SetPV05"){
    field (DESC, "Set ext temp via interface")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(PV,05) $(PORT)")
}

record(ao,"$(P)_$(DEV):SetSP00"){
    field (DESC, "Set-value transfer")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(SP,00) $(PORT)")
}

record(ao,"$(P)_$(DEV):SetSP01"){
    field (DESC, "Pump power level 1 to 6")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(SP,01) $(PORT)")
}

record(ao,"$(P)_$(DEV):SetSP02"){
    field (DESC, "Cooling op mode:0=OFF 1=ON 2=AUTO")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(SP,02) $(PORT)")
}

record(ao,"$(P)_$(DEV):SetSP04"){
    field (DESC, "TiH outflow temp limit, upper val")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(SP,04) $(PORT)")
}

record(ao,"$(P)_$(DEV):SetSP05"){
    field (DESC, "TiH outflow temp limit, lower val")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoValue(SP,05) $(PORT)")
}


record(ao,"$(P)_$(DEV):SetMODE00"){
    field (DESC, "Set Keypad Mode")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoInt(MODE,00) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetMODE00")
}

record(ao,"$(P)_$(DEV):SetMODE01"){
    field (DESC, "Set Control Mode")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoInt(MODE,01) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetMODE01")
}

#record(ao,"$(P)_$(DEV):SetMODE03"){
#    field (DESC, "Set Keypad Remote Mode")
#    field (DTYP, "stream")
#    field (OUT,  "@ecoChiller.proto setEcoInt(MODE,03) $(PORT)")
#    field (FLNK, "$(P)_$(DEV):GetMODE03")
#}


record(ao,"$(P)_$(DEV):SetMODE04"){
    field (DESC, "Set setpoint offset source")
    field (DTYP, "stream")
    field (OUT,  "@ecoChiller.proto setEcoInt(MODE,04) $(PORT)")
    field (FLNK, "$(P)_$(DEV):GetMODE04")
}

record(bo,"$(P)_$(DEV):ONOFF"){
    field (DESC, "Switch on,off from standby")
    field (DTYP, "stream")
    field (ONAM, "START")
    field (ZNAM, "STOP")
    field (OUT,  "@ecoChiller.proto setEcoStandby(START) $(PORT)")
}
