BEGIN{
    printf"<config name=\"HallB\">\n"
}
{
    if(NF>0){
	gsub("ONOFF","OFFON");
	tag=$1;
	if(tag=="GROUP"){
	    #print "prevtag=", prevtag,i
	    if((prevtag=="$ALIAS")||(prevtag=="$STATCOMMAND")){
		indent();printf "  </pv>\n";
	    }
	    
	    if((i>0)&&(prevtag!="GROUP")){                    #close the previous group
		indent();printf "</component>\n";
	    }
	    
	    parent = $2;
	    group  = $3;
	    
	    if(parent==lastgroup){
		i++;
		lastparent[i]=parent;
	    }
	    else{
		while((i>0)&&parent!=lastparent[i]){
		    i--;
		    indent();printf "</component>\n";
		}
	    }
	    indent();printf "<component name=\"%s\">\n",group;
	    lastgroup = group;
	    lastparent[i] = parent;
	}
	if(tag=="CHANNEL"){
	    if(prevtag!="GROUP"){
		indent();printf "  </pv>\n";	
	    }
	    channel=$3;
	    indent();printf "  <pv name=\"%s\">\n",$3;	
	    
	}
	
	if(tag=="$ALIAS"){
	    sub("\\$ALIAS","");
	    sub($1,"")
	    gsub("  ","")
	    indent();printf("    <description>SVT %s</description>\n",$0);
	    indent();printf("    <latching>true</latching>\n");
	}

	if(tag=="$STATCOMMAND"){
	    statchan=$4;
	    type=$2;

	    chst[statchan][channel]++;
	    
	    # if(statchan==prevstatchan){
	    # 	stat=sprintf("\"%s\"",statchan);
	    # 	ch=sprintf("\"%s\",",channel);
	    # 	printf("                {%-50s%-40s}\n",ch,stat) >> "subs.txt";
	    # }
	    # prevstatchan=statchan;
	}
	prevtag=tag;
    }
}
END{
    subfile="../svtIntlk.substitutions"
	
    #print "prevtag=", prevtag,i
    if((prevtag=="$ALIAS")||(prevtag=="$STATCOMMAND")){
	indent();printf "  </pv>\n";	
    }
    while((i>=0)){
	indent();printf "</component>\n";
	i--;
    }
    printf"</config>\n"

    printf"#\n" > subfile;
    printf"#This file was autogenerated by palarm2.gk on: %s\n",strftime()>> subfile;
    printf"#\n" >> subfile;
    printf"file \"db/svtIntlk.db\" {\n" >> subfile;
    printf"        pattern {%-50s%-30s%-35s}\n","CHAN,","OFF,","CAL" >> subfile;

    #loop in here
    

    for(i in chst){
	for( j in chst[i]){
	    if(chst[i][j]=="1"){
		calc=sprintf("\"((A==2)&&(B==3))?1:0\"");
	    }
	    else{
		calc=sprintf("\"((A==2)&&((B==3)||(B==5)))?1:0\"");	
	    }
	    stat=sprintf("\"%s\",",i);
	    ch=sprintf("\"%s\",",j);
	    printf("                {%-50s%-30s%-35s}\n",ch,stat,calc) >> subfile;
	    #print i,j,chst[i][j];
	}
    }
    
    printf"}\n">> subfile;
	
}
    
function indent(){
    printf("  ");
    for(n=0;n<i;n++){
	printf("  ");
    }
}    
